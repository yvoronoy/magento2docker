FROM php:7.0-apache
RUN apt-get update && apt-get install -y \
        libfreetype6-dev \
        libjpeg62-turbo-dev \
        libmcrypt-dev \
        libpng-dev \
        libxslt-dev \
        libicu-dev \
        mysql-client \
        pv \
        vim \
        bash-completion \
        openssh-server \
        ssl-cert \
        msmtp \
        sudo \
        dnsutils \
        iputils-ping \
        iputils-tracepath \
        host \
        telnet \
        unzip \
    && docker-php-ext-install -j$(nproc) iconv mcrypt soap\
    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \
    && docker-php-ext-install -j$(nproc) gd bcmath pdo_mysql xsl intl zip
RUN apt-get update              \
         &&      apt-get install -y git      \
         &&      apt-get clean all

# Tune environment
RUN echo "Defaults    timestamp_timeout=-1" >> /etc/sudoers

ENV _USER=magento
ENV _HOME_DIRECTORY=/home/${_USER}
RUN useradd -m ${_USER} && echo "${_USER}:${_USER}" | chpasswd && chsh ${_USER} -s /bin/bash && adduser ${_USER} sudo

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
RUN pecl install xdebug-2.5.5
RUN echo ";zend_extension=xdebug.so" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
RUN echo "xdebug.remote_host=10.254.254.254" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
RUN echo "xdebug.remote_enable=1" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
RUN echo "xdebug.remote_autostart=1" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
RUN echo "xdebug.max_nesting_level=10000" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
RUN echo "xdebug.idekey=PHPSTORM" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini

#RUN cd /tmp/ && curl -OL https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz && cd -
#RUN cd /tmp/ && tar xf ioncube_loaders_lin_x86-64.tar.gz && cd -
#RUN cp /tmp/ioncube/ioncube_loader_lin_7.0.so /usr/local/lib/php/extensions/no-debug-non-zts-20151012/ioncube_loader_lin_7.0.so
#RUN echo "zend_extension=/usr/local/lib/php/extensions/no-debug-non-zts-20151012/ioncube_loader_lin_7.0.so" >> /usr/local/etc/php/conf.d/docker-php-ext-ioncube.ini

RUN pear install PHP_CodeSniffer
RUN mkdir /usr/local/magento-ecg-code-sniffer
RUN cd /usr/local/magento-ecg-code-sniffer/ && composer require magento-ecg/coding-standard
RUN phpcs --config-set installed_paths /usr/local/magento-ecg-code-sniffer/vendor/magento-ecg/coding-standard

RUN echo "sendmail_path=/usr/bin/msmtp -t" >> /usr/local/etc/php/conf.d/mailcatcher.ini
RUN echo "memory_limit=2G" >> /usr/local/etc/php/conf.d/custom.ini
RUN echo "max_input_vars=10000" >> /usr/local/etc/php/conf.d/custom.ini
RUN echo "account default" >> /etc/msmtprc
RUN echo "host mailcatcher" >> /etc/msmtprc
RUN echo "port 1025" >> /etc/msmtprc
RUN echo "auto_from on" >> /etc/msmtprc

#GIT
COPY ./etc/git/gitconfig ${_HOME_DIRECTORY}/.gitconfig

COPY ./etc/composer/auth.json /${_HOME_DIRECTORY}/.composer/auth.json

#SSH
COPY ./etc/ssh ${_HOME_DIRECTORY}/.ssh
ADD ./etc/ssh/magento2docker.pub ${_HOME_DIRECTORY}/.ssh/authorized_keys
RUN chown -R ${_USER}:${_USER} ${_HOME_DIRECTORY}/.ssh
RUN chmod -R 700 ${_HOME_DIRECTORY}/.ssh

COPY ./etc/ssh /root/.ssh
ADD ./etc/ssh/magento2docker.pub /root/.ssh/authorized_keys
RUN chmod -R 700 /root/.ssh
#END

RUN echo "Ciphers aes128-ctr,aes192-ctr,aes256-ctr,aes128-gcm@openssh.com,aes256-gcm@openssh.com,chacha20-poly1305@openssh.com,blowfish-cbc,aes128-cbc,3des-cbc,cast128-cbc,arcfour,aes192-cbc,aes256-cbc" >> /etc/ssh/sshd_config
COPY ./misc/xdebug-php.sh /usr/local/bin/xdebug-php.sh

#APACHE
RUN a2enmod ssl
RUN a2ensite default-ssl.conf
RUN a2enmod vhost_alias

RUN a2enmod rewrite
RUN chown -R ${_USER}:${_USER} /var/www/html
COPY ./etc/apache/envvars /etc/apache2/envvars
#APACHE END
RUN chown -R ${_USER}:${_USER} ${_HOME_DIRECTORY}

#USER SPECIFYC
USER magento
RUN echo "source /etc/bash_completion" >> ${_HOME_DIRECTORY}/.bashrc
RUN curl -sS https://accounts.magento.cloud/cli/installer | php
USER root

# Hack to not cache https://github.com/docker/docker/issues/1996#issuecomment-185872769
ARG CACHEBUST=1
COPY ./misc/* /usr/local/bin/
COPY ./etc/apache /etc/apache2/sites-enabled/
COPY ./etc/fixtures /etc/fixtures
COPY ./etc/m2install/.m2install.conf* ${_HOME_DIRECTORY}/

RUN chmod +x /usr/local/bin/xdebug-php.sh
RUN curl -o /usr/local/bin/m2install.sh https://raw.githubusercontent.com/yvoronoy/m2install/master/m2install.sh \
    && chmod +x /usr/local/bin/m2install.sh
RUN curl -o /etc/bash_completion.d/m2install-bash-completion https://raw.githubusercontent.com/yvoronoy/m2install/master/m2install-bash-completion
RUN curl -o /usr/local/bin/n98-magerun2 https://files.magerun.net/n98-magerun2.phar \
    && chmod +x /usr/local/bin/n98-magerun2
RUN curl -o /etc/bash_completion.d/n98-magerun2.phar.bash https://raw.githubusercontent.com/netz98/n98-magerun2/master/res/autocompletion/bash/n98-magerun2.phar.bash
RUN curl -o /usr/local/bin/m2-convert-for-composer https://raw.githubusercontent.com/isitnikov/m2-convert-patch-for-composer-install/master/convert-for-composer.php \
    && chmod +x /usr/local/bin/m2-convert-for-composer
RUN curl -o /etc/bash_completion.d/magento2-bash-completion https://raw.githubusercontent.com/yvoronoy/magento2-bash-completion/master/magento2-bash-completion-enterprise
RUN curl -L -o /tmp/teleport.tar.gz https://github.com/gravitational/teleport/releases/download/v1.3.2/teleport-v1.3.2-linux-amd64-bin.tar.gz
RUN tar -xf /tmp/teleport.tar.gz -C /tmp/
RUN make -C /tmp/teleport/

RUN ssh-keygen -F github.com || ssh-keyscan github.com >> /root/.ssh/known_hosts
RUN git clone git@github.com:magento-sparta/ee-support-tools.git /usr/local/src/ee-support-tools
RUN ln -s /usr/local/src/ee-support-tools/cloud-teleport/cloud-teleport /usr/local/bin/cloud-teleport
RUN chmod +x /usr/local/bin/cloud-teleport

CMD service ssh start; apache2-foreground
